{
  "version": 3,
  "sources": ["../../../../node_modules/.pnpm/mode-watcher@0.3.1_svelte@4.2.18/node_modules/mode-watcher/dist/without-transition.js", "../../../../node_modules/.pnpm/mode-watcher@0.3.1_svelte@4.2.18/node_modules/mode-watcher/dist/stores.js", "../../../../node_modules/.pnpm/mode-watcher@0.3.1_svelte@4.2.18/node_modules/mode-watcher/dist/mode.js", "../../../../node_modules/.pnpm/mode-watcher@0.3.1_svelte@4.2.18/node_modules/mode-watcher/dist/mode-watcher.svelte"],
  "sourcesContent": ["// Original Source: https://reemus.dev/article/disable-css-transition-color-scheme-change#heading-ultimate-solution-for-changing-color-scheme-without-transitions\nlet timeoutAction;\nlet timeoutEnable;\n// Perform a task without any css transitions\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function withoutTransition(action) {\n    if (typeof document === 'undefined')\n        return;\n    // Clear fallback timeouts\n    clearTimeout(timeoutAction);\n    clearTimeout(timeoutEnable);\n    // Create style element to disable transitions\n    const style = document.createElement('style');\n    const css = document.createTextNode(`* {\n     -webkit-transition: none !important;\n     -moz-transition: none !important;\n     -o-transition: none !important;\n     -ms-transition: none !important;\n     transition: none !important;\n  }`);\n    style.appendChild(css);\n    // Functions to insert and remove style element\n    const disable = () => document.head.appendChild(style);\n    const enable = () => document.head.removeChild(style);\n    // Best method, getComputedStyle forces browser to repaint\n    if (typeof window.getComputedStyle !== 'undefined') {\n        disable();\n        action();\n        window.getComputedStyle(style).opacity;\n        enable();\n        return;\n    }\n    // Better method, requestAnimationFrame processes function before next repaint\n    if (typeof window.requestAnimationFrame !== 'undefined') {\n        disable();\n        action();\n        window.requestAnimationFrame(enable);\n        return;\n    }\n    // Fallback\n    disable();\n    timeoutAction = window.setTimeout(() => {\n        action();\n        timeoutEnable = window.setTimeout(enable, 120);\n    }, 120);\n}\n", "import { writable, derived } from 'svelte/store';\nimport { withoutTransition } from './without-transition.js';\n// saves having to branch for server vs client\nconst noopStorage = {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    getItem: (_key) => null,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    setItem: (_key, _value) => { },\n};\n// whether we are running on server vs client\nconst isBrowser = typeof document !== 'undefined';\n// the modes that are supported, used for validation & type derivation\nexport const modes = ['dark', 'light', 'system'];\n/**\n * The key used to store the mode in localStorage.\n */\nexport const localStorageKey = 'mode-watcher-mode';\n/**\n * Writable store that represents the user's preferred mode (`\"dark\"`, `\"light\"` or `\"system\"`)\n */\nexport const userPrefersMode = createUserPrefersMode();\n/**\n * Readable store that represents the system's preferred mode (`\"dark\"`, `\"light\"` or `undefined`)\n */\nexport const systemPrefersMode = createSystemMode();\n/**\n * Theme colors for light and dark modes.\n */\nexport const themeColors = writable(undefined);\n/**\n * Whether to disable transitions when changing the mode.\n */\nexport const disableTransitions = writable(true);\n/**\n * Derived store that represents the current mode (`\"dark\"`, `\"light\"` or `undefined`)\n */\nexport const derivedMode = createDerivedMode();\n// derived from: https://github.com/CaptainCodeman/svelte-web-storage\nfunction createUserPrefersMode() {\n    const defaultValue = 'system';\n    const storage = isBrowser ? localStorage : noopStorage;\n    const initialValue = storage.getItem(localStorageKey);\n    let value = isValidMode(initialValue) ? initialValue : defaultValue;\n    const { subscribe, set: _set } = writable(value, () => {\n        if (!isBrowser)\n            return;\n        const handler = (e) => {\n            if (e.key !== localStorageKey)\n                return;\n            const newValue = e.newValue;\n            if (isValidMode(newValue)) {\n                _set((value = newValue));\n            }\n            else {\n                _set((value = defaultValue));\n            }\n        };\n        addEventListener('storage', handler);\n        return () => removeEventListener('storage', handler);\n    });\n    function set(v) {\n        _set((value = v));\n        storage.setItem(localStorageKey, value);\n    }\n    return {\n        subscribe,\n        set,\n    };\n}\nfunction createSystemMode() {\n    const defaultValue = undefined;\n    let track = true;\n    const { subscribe, set } = writable(defaultValue, () => {\n        if (!isBrowser)\n            return;\n        const handler = (e) => {\n            if (!track)\n                return;\n            set(e.matches ? 'light' : 'dark');\n        };\n        const mediaQueryState = window.matchMedia('(prefers-color-scheme: light)');\n        mediaQueryState.addEventListener('change', handler);\n        return () => mediaQueryState.removeEventListener('change', handler);\n    });\n    /**\n     * Query system preferences and update the store.\n     */\n    function query() {\n        if (!isBrowser)\n            return;\n        const mediaQueryState = window.matchMedia('(prefers-color-scheme: light)');\n        set(mediaQueryState.matches ? 'light' : 'dark');\n    }\n    /**\n     * Enable or disable tracking of system preference changes.\n     */\n    function tracking(active) {\n        track = active;\n    }\n    return {\n        subscribe,\n        query,\n        tracking,\n    };\n}\nfunction createDerivedMode() {\n    const { subscribe } = derived([userPrefersMode, systemPrefersMode, themeColors, disableTransitions], ([$userPrefersMode, $systemPrefersMode, $themeColors, $disableTransitions]) => {\n        if (!isBrowser)\n            return undefined;\n        const derivedMode = $userPrefersMode === 'system' ? $systemPrefersMode : $userPrefersMode;\n        function update() {\n            const htmlEl = document.documentElement;\n            const themeColorEl = document.querySelector('meta[name=\"theme-color\"]');\n            if (derivedMode === 'light') {\n                htmlEl.classList.remove('dark');\n                htmlEl.style.colorScheme = 'light';\n                if (themeColorEl && $themeColors) {\n                    themeColorEl.setAttribute('content', $themeColors.light);\n                }\n            }\n            else {\n                htmlEl.classList.add('dark');\n                htmlEl.style.colorScheme = 'dark';\n                if (themeColorEl && $themeColors) {\n                    themeColorEl.setAttribute('content', $themeColors.dark);\n                }\n            }\n        }\n        if ($disableTransitions) {\n            withoutTransition(update);\n        }\n        else {\n            update();\n        }\n        return derivedMode;\n    });\n    return {\n        subscribe,\n    };\n}\nexport function isValidMode(value) {\n    if (typeof value !== 'string')\n        return false;\n    return modes.includes(value);\n}\n", "import { get } from 'svelte/store';\nimport { localStorageKey, userPrefersMode, systemPrefersMode, derivedMode, themeColors, disableTransitions, } from './stores.js';\n/** Toggle between light and dark mode */\nexport function toggleMode() {\n    userPrefersMode.set(get(derivedMode) === 'dark' ? 'light' : 'dark');\n}\n/** Set the mode to light or dark */\nexport function setMode(mode) {\n    userPrefersMode.set(mode);\n}\n/** Reset the mode to operating system preference */\nexport function resetMode() {\n    userPrefersMode.set('system');\n}\n/** Used to set the mode on initial page load to prevent FOUC */\nexport function setInitialMode(defaultMode, themeColors) {\n    const rootEl = document.documentElement;\n    const mode = localStorage.getItem('mode-watcher-mode') || defaultMode;\n    const light = mode === 'light' ||\n        (mode === 'system' && window.matchMedia('(prefers-color-scheme: light)').matches);\n    rootEl.classList[light ? 'remove' : 'add']('dark');\n    rootEl.style.colorScheme = light ? 'light' : 'dark';\n    if (themeColors) {\n        const themeMetaEl = document.querySelector('meta[name=\"theme-color\"]');\n        if (themeMetaEl) {\n            themeMetaEl.setAttribute('content', mode === 'light' ? themeColors.light : themeColors.dark);\n        }\n    }\n    localStorage.setItem('mode-watcher-mode', mode);\n}\nexport { localStorageKey, userPrefersMode, systemPrefersMode, derivedMode as mode, themeColors, disableTransitions, };\n", null],
  "mappings": "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",
  "names": ["derivedMode", "themeColors", "ctx", "themeColors", "disableTransitions"]
}
